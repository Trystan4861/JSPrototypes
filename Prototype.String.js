/**
 * Sobrecargas para usar las funciones de enteros en cadenas
 * Depemdencias: Prototype.Number.js
 */
String.prototype.changeBase=Number.prototype.changeBase;
String.prototype.bin2dec=Number.prototype.bin2dec;
String.prototype.dec2bin=Number.prototype.dec2bin;

/**
 * MD5: Genera el hash MD5 de la cadena
 * @return {[string]} [el MD5 de 32 caracteres de la cadena]
 */
String.prototype.MD5 = function() {var safe_add = function(x, y) {var lsw = (x & 0xFFFF) + (y & 0xFFFF);var msw = (x >> 16) + (y >> 16) + (lsw >> 16);return (msw << 16) | (lsw & 0xFFFF);};var rol = function(num, cnt) {return (num << cnt) | (num >>> (32 - cnt));};var cmn = function(q, a, b, x, s, t) {return safe_add(rol(safe_add(safe_add(a, q), safe_add(x, t)), s), b);};var ff = function(a, b, c, d, x, s, t) {return cmn((b & c) | ((~b) & d), a, b, x, s, t);};var gg = function(a, b, c, d, x, s, t) {return cmn((b & d) | (c & (~d)), a, b, x, s, t);};var hh = function(a, b, c, d, x, s, t) {return cmn(b ^ c ^ d, a, b, x, s, t);};var ii = function(a, b, c, d, x, s, t) {return cmn(c ^ (b | (~d)), a, b, x, s, t);};var coreMD5 = function(x) {var olda, oldb, oldc, oldd, i, len=x.length;var a = 1732584193;var b = -271733879;var c = -1732584194;var d = 271733878;for (i=0; i<len; i+=16) {olda = a;oldb = b;oldc = c;oldd = d;a = ff(a, b, c, d, x[i + 0], 7, -680876936);d = ff(d, a, b, c, x[i + 1], 12, -389564586);c = ff(c, d, a, b, x[i + 2], 17, 606105819);b = ff(b, c, d, a, x[i + 3], 22, -1044525330);a = ff(a, b, c, d, x[i + 4], 7, -176418897);d = ff(d, a, b, c, x[i + 5], 12, 1200080426);c = ff(c, d, a, b, x[i + 6], 17, -1473231341);b = ff(b, c, d, a, x[i + 7], 22, -45705983);a = ff(a, b, c, d, x[i + 8], 7, 1770035416);d = ff(d, a, b, c, x[i + 9], 12, -1958414417);c = ff(c, d, a, b, x[i + 10], 17, -42063);b = ff(b, c, d, a, x[i + 11], 22, -1990404162);a = ff(a, b, c, d, x[i + 12], 7, 1804603682);d = ff(d, a, b, c, x[i + 13], 12, -40341101);c = ff(c, d, a, b, x[i + 14], 17, -1502002290);b = ff(b, c, d, a, x[i + 15], 22, 1236535329);a = gg(a, b, c, d, x[i + 1], 5, -165796510);d = gg(d, a, b, c, x[i + 6], 9, -1069501632);c = gg(c, d, a, b, x[i + 11], 14, 643717713);b = gg(b, c, d, a, x[i + 0], 20, -373897302);a = gg(a, b, c, d, x[i + 5], 5, -701558691);d = gg(d, a, b, c, x[i + 10], 9, 38016083);c = gg(c, d, a, b, x[i + 15], 14, -660478335);b = gg(b, c, d, a, x[i + 4], 20, -405537848);a = gg(a, b, c, d, x[i + 9], 5, 568446438);d = gg(d, a, b, c, x[i + 14], 9, -1019803690);c = gg(c, d, a, b, x[i + 3], 14, -187363961);b = gg(b, c, d, a, x[i + 8], 20, 1163531501);a = gg(a, b, c, d, x[i + 13], 5, -1444681467);d = gg(d, a, b, c, x[i + 2], 9, -51403784);c = gg(c, d, a, b, x[i + 7], 14, 1735328473);b = gg(b, c, d, a, x[i + 12], 20, -1926607734);a = hh(a, b, c, d, x[i + 5], 4, -378558);d = hh(d, a, b, c, x[i + 8], 11, -2022574463);c = hh(c, d, a, b, x[i + 11], 16, 1839030562);b = hh(b, c, d, a, x[i + 14], 23, -35309556);a = hh(a, b, c, d, x[i + 1], 4, -1530992060);d = hh(d, a, b, c, x[i + 4], 11, 1272893353);c = hh(c, d, a, b, x[i + 7], 16, -155497632);b = hh(b, c, d, a, x[i + 10], 23, -1094730640);a = hh(a, b, c, d, x[i + 13], 4, 681279174);d = hh(d, a, b, c, x[i + 0], 11, -358537222);c = hh(c, d, a, b, x[i + 3], 16, -722521979);b = hh(b, c, d, a, x[i + 6], 23, 76029189);a = hh(a, b, c, d, x[i + 9], 4, -640364487);d = hh(d, a, b, c, x[i + 12], 11, -421815835);c = hh(c, d, a, b, x[i + 15], 16, 530742520);b = hh(b, c, d, a, x[i + 2], 23, -995338651);a = ii(a, b, c, d, x[i + 0], 6, -198630844);d = ii(d, a, b, c, x[i + 7], 10, 1126891415);c = ii(c, d, a, b, x[i + 14], 15, -1416354905);b = ii(b, c, d, a, x[i + 5], 21, -57434055);a = ii(a, b, c, d, x[i + 12], 6, 1700485571);d = ii(d, a, b, c, x[i + 3], 10, -1894986606);c = ii(c, d, a, b, x[i + 10], 15, -1051523);b = ii(b, c, d, a, x[i + 1], 21, -2054922799);a = ii(a, b, c, d, x[i + 8], 6, 1873313359);d = ii(d, a, b, c, x[i + 15], 10, -30611744);c = ii(c, d, a, b, x[i + 6], 15, -1560198380);b = ii(b, c, d, a, x[i + 13], 21, 1309151649);a = ii(a, b, c, d, x[i + 4], 6, -145523070);d = ii(d, a, b, c, x[i + 11], 10, -1120210379);c = ii(c, d, a, b, x[i + 2], 15, 718787259);b = ii(b, c, d, a, x[i + 9], 21, -343485551);a = safe_add(a, olda);b = safe_add(b, oldb);c = safe_add(c, oldc);d = safe_add(d, oldd);}return [a, b, c, d];};var binl2hex = function(binarray) {var hex_tab = "0123456789abcdef", str = "", i, len=binarray.length*4;for (i=0; i<len; i++) {str += hex_tab.charAt((binarray[i >> 2] >> ((i % 4) * 8 + 4)) & 0xF) + hex_tab.charAt((binarray[i >> 2] >> ((i % 4) * 8)) & 0xF);}return str;};var str2binl = function(str) {var nblk = ((str.length + 8) >> 6) + 1;var blks = [], i, len=nblk*16, j, strlen=str.length;for (i=0; i<len; i++) {blks.push(0);}for (j=0; j<strlen; j++) {blks[j >> 2] |= (str.charCodeAt(j) & 0xFF) << ((j % 4) * 8);}blks[j >> 2] |= 0x80 << ((j % 4) * 8);blks[nblk*16 - 2] = strlen * 8;return blks;};return binl2hex(coreMD5(str2binl(this)));};
/**
 * leadingZeros: agrega ceros delante de la cadena hasta que tenga la logitud «length»
 * @param  {int} length [longitud de cadena deseada]
 * @return {string}     [string resultado]
 */
String.prototype.leadingZeros=function(length){return this.padStart(length, '0');};
/**
 * hashCode: obtiene el Hash de la cadena
 * @return {string}           [el Hash de la cadena en cuestión]
 */
String.prototype.hashCode = function(){return this.split("").reduce(function(a,b){a=((a<<5)-a)+b.charCodeAt(0);return a&a},0);}